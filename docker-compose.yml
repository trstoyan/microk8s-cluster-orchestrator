services:
  orchestrator:
    build: .
    ports:
      - "5000:5000"
    volumes:
      - ./cluster_data.db:/app/cluster_data.db
      - ./config:/app/config
      - ./logs:/app/logs
      - ./ssh_keys:/app/ssh_keys
      - ./backups:/app/backups
      - ./migrations:/app/migrations
      - ~/.ssh:/root/.ssh:ro
    environment:
      - FLASK_ENV=production
      - DATABASE_PATH=/app/cluster_data.db
      - ORCHESTRATOR_CONFIG=/app/config/production.yml
      - SSH_KEYS_DIR=/app/ssh_keys
      - BACKUPS_DIR=/app/backups
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/system/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
  # Optional: Add a monitoring service
  # prometheus:
  #   image: prom/prometheus:latest
  #   ports:
  #     - "9090:9090"
  #   volumes:
  #     - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
  #   command:
  #     - '--config.file=/etc/prometheus/prometheus.yml'
  #     - '--storage.tsdb.path=/prometheus'
  #     - '--web.console.libraries=/etc/prometheus/console_libraries'
  #     - '--web.console.templates=/etc/prometheus/consoles'
